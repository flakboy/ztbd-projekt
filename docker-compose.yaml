services:
    db_msql:
        image: mcr.microsoft.com/mssql/server:latest
        env_file: ".env"
        environment:
            - ACCEPT_EULA=Y
            - MSSQL_PID=Developer
            - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
        ports:
            - 1433:1433
        profiles:
            - mssql
    db_postgres:
        image: postgresql:latest
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=${POSTGRES_NAME}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        profiles:
            - postgres
    db_cassandra:
        build:
            context: ./cassandra
            args:
                - CASSANDRA_JMX_USER=${CASSANDRA_JMX_USER}
                - CASSANDRA_JMX_PASSWORD=${CASSANDRA_JMX_PASSWORD}
        ports:
            - 7000:7000
            - 7001:7001
            - 7199:7199
            - 7200:7200
            - 9042:9042
        profiles:
            - cassandra
            - cassandra-init
        environment:
            - CASSANDRA_AUTHENTICATOR=PasswordAuthenticator
            - CASSANDRA_PASSWORD_SEEDER=yes
            - CASSANDRA_USER=${CASSANDRA_USER}
            - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
            - LOCAL_JMX=no
            # - JVM_OPTS=-Dcom.sun.management.jmxremote.rmi.port=7199 -Dcom.sun.management.jmxremote.access.file=/etc/cassandra/jmxremote.access -Djava.rmi.server.hostname=db_cassandra
            - JVM_OPTS=-Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.rmi.port=7200 -Dcom.sun.management.jmxremote.access.file=/etc/cassandra/jmxremote.access -Dcom.sun.management.jmxremote.host="db_cassandra" -Djava.rmi.server.hostname="db_cassandra"
        # volumes:
            # - ./cassandra/init/init.cql:/scripts/data.cql
            # - ./cassandra/init:/docker-entrypoint-initdb.d
        # https://stackoverflow.com/a/51476148
        healthcheck:
            # test: ["CMD", "cqlsh", "db_cassandra", "9042", "-u ${CASSANDRA_USER}", "-p ${CASSANDRA_PASSWORD}" ,"-e 'describe keyspaces'"]
            test: cqlsh db_cassandra 9042 -u ${CASSANDRA_USER} -p ${CASSANDRA_PASSWORD} -e 'describe keyspaces'
            interval: 15s
            timeout: 10s
            retries: 10
    db_cassandra_init:
        image: cassandra:latest
        profiles:
            - cassandra-init
        environment:
            - CQLSH_HOST=db_cassandra
        depends_on:
            db_cassandra:
                condition: service_healthy
        volumes:
            - ./cassandra/init:/init
            - ./data/csv/:/var/cql
            - ./data/sstable/:/var/sstable
        
        # Needs to execute "nodetool -u <user> -pw <password> upgradesstables -a yelp" after initializing tables, or the main container will fail to launch after reboot
        # command: /bin/bash -c "echo 'Importing data...' && cqlsh db_cassandra 9042 -f /init/init.cql && sstableloader -d db_cassandra /var/sstable/yelp/reviews && echo 'keyspace initialized.'"
        command: /bin/bash -c "echo 'Importing data...' && sleep 36000"

    db_mongo:
        image: mongo
        profiles:
            - mongo
        ports:
            - 27017:27017
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
        command:
            - '--config'
            - '/etc/mongo/mongod.yaml'
        volumes:
            - ./mongo/config:/etc/mongo/:ro
            - ./mongo/init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro